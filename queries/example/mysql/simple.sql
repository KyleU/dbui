drop table if exists metatable;

create table metatable (
  id serial primary key,
  i integer,
  si smallint,
  ti tinyint,
  mi mediumint,
  bi bigint,
  dc decimal,
  n numeric,
  f float,
  r real,
  dp double precision,
  bt bit,
  d date,
  tm time,
  dt datetime,
  ts timestamp,
  y year,
  c char,
  vc varchar(100),
  b binary,
  bl blob,
  tx text,
  g geometry,
  p point,
  ls linestring,
  pl polygon,
  mpn multipoint,
  mls multilinestring,
  mp multipolygon,
  gc geometrycollection,
  j json
);

insert into metatable (
  id,
  i,
  si,
  ti,
  mi,
  bi,
  dc,
  n,
  f,
  r,
  dp,
  bt,
  d,
  tm,
  dt,
  ts,
  y,
  c,
  vc,
  b,
  bl,
  tx,
  g,
  p,
  ls,
  pl,
  mpn,
  mls,
  mp,
  gc,
  j
) values (
  1,
  1,
  1,
  1,
  1,
  1,
  1.0,
  1.01,
  1.01,
  1.02,
  1.11111,
  0,
  '2020-01-01',
  '12:00:00',
  '2020-01-01 00:00:00',
  '2020-01-01 00:00:00',
  2020,
  'a',
  'asdf',
  1,
  '00000000000',
  'Hello, world!',
  ST_GeomFromText('point(0 0)'),
  ST_GeomFromText('point(15 20)'),
  ST_GeomFromText('linestring(0 0, 10 10, 20 20)'),
  ST_GeomFromText('polygon((0 0,10 0,10 10,0 10,0 0),(5 5,7 5,7 7,5 7, 5 5))'),
  ST_GeomFromText('multipoint(0 0, 20 20, 60 60)'),
  ST_GeomFromText('multilinestring((10 10, 20 20), (15 15, 30 15))'),
  ST_GeomFromText('multipolygon(((0 0,10 0,10 10,0 10,0 0)),((5 5,7 5,7 7,5 7, 5 5)))'),
  ST_GeomFromText('geometrycollection(point(10 10), point(30 30), linestring(15 15, 20 20))'),
  '{}'
);

-- <%: func ExampleMySQL(w io.Writer) %>
